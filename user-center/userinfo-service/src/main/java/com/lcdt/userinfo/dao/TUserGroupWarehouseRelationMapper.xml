<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcdt.userinfo.dao.TUserGroupWarehouseRelationMapper">
  <resultMap id="BaseResultMap" type="com.lcdt.userinfo.model.TUserGroupWarehouseRelation">
    <id column="relation_id" jdbcType="BIGINT" property="relationId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="ware_house_id" jdbcType="BIGINT" property="wareHouseId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_group_warehouse_relation
    where relation_id = #{relationId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcdt.userinfo.model.TUserGroupWarehouseRelation">
    <selectKey keyProperty="relationId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_group_warehouse_relation (user_id, ware_house_id, create_date, 
      version,company_id,group_id)
    values (#{userId,jdbcType=BIGINT}, #{wareHouseId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER},#{companyId,jdbcType=INTEGER},#{groupId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lcdt.userinfo.model.TUserGroupWarehouseRelation">
    update t_user_group_warehouse_relation
    set user_id = #{userId,jdbcType=BIGINT},
      ware_house_id = #{wareHouseId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=BIGINT}
    where relation_id = #{relationId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select relation_id, user_id, ware_house_id, create_date, version, company_id, group_id
    from t_user_group_warehouse_relation
    where relation_id = #{relationId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select relation_id, user_id, ware_house_id, create_date, version, company_id, group_id
    from t_user_group_warehouse_relation
  </select>

  <select id="selectAddedUserGroupWareHouse" resultMap="BaseResultMap">
     select relation_id, user_id, ware_house_id, create_date, version, company_id, group_id
    from t_user_group_warehouse_relation
    where group_id = #{groupId} and company_id = #{companyId}
</select>

  <!--查询所有没有和group关联的 仓库-->
  <select id="selectNotAddUserGroupWareHouse" resultMap="BaseResultMap">
SELECT w.* ,re.*  from t_warehouse w
  left join t_user_group_warehouse_relation re on w.wh_id = re.ware_house_id
where w.wh_id not in (SELECT r.ware_house_id from t_user_group_warehouse_relation r
  WHERE r.company_id = #{companyId} and r.group_id = #{groupId}
) and w.company_id =#{companyId}

  </select>

  <select id="selectAddedUserGroupWareHouseWareHouseIds" resultType="java.lang.String">
    select GROUP_CONCAT(ware_house_id)
    from t_user_group_warehouse_relation
    where group_id = #{groupId} and company_id = #{companyId}
  </select>

  <delete id="deleteBatch" parameterType="java.lang.Long">
    delete from t_user_group_warehouse_relation
    where ware_house_id = #{wareHouseId,jdbcType=BIGINT}
  </delete>

  <select id="selectGroupNamesByGroupIds" parameterType="java.util.Map" resultType="java.lang.String">
    select GROUP_CONCAT(ug.group_name)
    from t_uc_group ug,t_user_group_warehouse_relation ugwr
    where ug.group_id=ugwr.group_id
    and ug.company_id=ugwr.company_id
    and ugwr.ware_house_id=#{wareHouseId,jdbcType=BIGINT}
    and FIND_IN_SET(ug.group_id,#{groupIds,jdbcType=VARCHAR})
  </select>

</mapper>