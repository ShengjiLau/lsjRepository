<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcdt.userinfo.dao.UserCompRelMapper">
  <resultMap id="BaseResultMap" type="com.lcdt.userinfo.model.UserCompRel">
    <id column="user_comp_rel_id" jdbcType="BIGINT" property="userCompRelId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="comp_id" jdbcType="BIGINT" property="compId" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_create" jdbcType="SMALLINT" property="isCreate" />
    <result column="dept_ids" jdbcType="VARCHAR" property="deptIds" />
    <result column="dept_names" jdbcType="VARCHAR" property="deptNames" />
    <result column="is_enable" jdbcType="TINYINT" property="isEnable"></result>
    <result column="duty" jdbcType="VARCHAR" property="duty"></result>
    <association property="user" column="user_id" javaType="com.lcdt.userinfo.model.User"
    select="com.lcdt.userinfo.dao.UserMapper.selectByPrimaryKeyWithoutPwd" fetchType="eager"
    ></association>
    <association property="company" column="comp_id"
                 javaType="com.lcdt.userinfo.model.Company"
                 select="com.lcdt.userinfo.dao.CompanyMapper.selectByPrimaryKey" fetchType="eager"></association>

    <!--<collection property="groups" ofType="com.lcdt.userinfo.model.UserGroupRelation"-->
                <!--autoMapping="true" fetchType="eager" column="{groupId=group_id,companyId=comp_id}"-->
                <!--select="com.lcdt.userinfo.dao.UserGroupRelationMapper.selectByUserCompany" >-->
    <!--<id property="groupId" column="group_id"></id>-->
    <!--<id column="group_id" jdbcType="BIGINT" property="groupId" />-->
    <!--<result column="group_name" jdbcType="VARCHAR" property="groupName" />-->
    <!--<result column="company_id" jdbcType="BIGINT" property="companyId" />-->
    <!--<result column="is_valid" jdbcType="BIT" property="isValid" />-->
    <!--<result column="group_remark" jdbcType="VARCHAR" property="groupRemark" />-->
    <!--<result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />-->
    <!--</collection>-->

    <!--<collection property="roles" ofType="com.lcdt.clms.permission.model.Role"-->
                <!--autoMapping="true" column="role_id"-->
                <!--fetchType="eager"-->
                <!--select="com.lcdt.clms.permission.dao.RoleMapper.selectByPrimaryKey"-->
    <!--&gt;-->
      <!--&lt;!&ndash;<id column="role_id" jdbcType="INTEGER" property="roleId"/>&ndash;&gt;-->
      <!--&lt;!&ndash;<result column="role_name" jdbcType="VARCHAR" property="roleName"/>&ndash;&gt;-->
      <!--&lt;!&ndash;<result column="role_comment" jdbcType="VARCHAR" property="roleComment"/>&ndash;&gt;-->
      <!--&lt;!&ndash;<result column="role_company_id" jdbcType="LONGVARCHAR" property="roleCompanyId"/>&ndash;&gt;-->
    <!--</collection>-->
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_uc_user_comp_rel
    where user_comp_rel_id = #{userCompRelId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcdt.userinfo.model.UserCompRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="userCompRelId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_uc_user_comp_rel (user_id, comp_id,full_name,create_date,is_create,dept_ids,dept_names,duty)
    values (#{userId,jdbcType=BIGINT}, #{compId,jdbcType=BIGINT}, #{fullName,jdbcType=VARCHAR},#{createDate,jdbcType=TIMESTAMP},#{isCreate,jdbcType=SMALLINT}
    ,#{deptIds,jdbcType=VARCHAR}, #{deptNames,jdbcType=VARCHAR},#{duty,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lcdt.userinfo.model.UserCompRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_uc_user_comp_rel
    set user_id = #{userId,jdbcType=BIGINT},
        comp_id = #{compId,jdbcType=BIGINT},
        full_name = #{fullName,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=VARCHAR},
        is_create = #{isCreate,jdbcType=VARCHAR},
        dept_ids = #{deptIds,jdbcType=VARCHAR},
        dept_names = #{deptNames,jdbcType=VARCHAR},
        is_enable = #{isEnable,jdbcType=TINYINT}
    where user_comp_rel_id = #{userCompRelId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select user_comp_rel_id, user_id, comp_id,full_name,create_date,is_create,dept_ids,dept_names,is_enable,duty
    from t_uc_user_comp_rel
    where user_comp_rel_id = #{userCompRelId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_comp_rel_id, user_id, comp_id,full_name,create_date,is_create,dept_ids,dept_names,duty
    from t_uc_user_comp_rel
  </select>



  <select id="selectByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
    select user_comp_rel_id, user_id, comp_id,full_name,create_date,is_create,dept_ids,dept_names,duty
    from t_uc_user_comp_rel
    WHERE 1=1
    <trim prefix="" suffix="" suffixOverrides="">
      <if test="userId != null &amp;&amp; userId != ''">
        AND user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="compId != null &amp;&amp; compId != ''">
        and comp_id = #{compId,jdbcType=BIGINT}
      </if>
      <if test="fullName != null &amp;&amp; fullName != ''">
        and full_name = #{fullName,jdbcType=VARCHAR}
      </if>
      <!--删除部门逻辑用Begin-->
      <if test="deptIds != null &amp;&amp; deptIds != ''">
        and ${deptIds}
      </if>
      <!--删除部门逻辑用End-->

    </trim>
    order by user_comp_rel_id
  </select>

  <select id="selectBySearchDto" parameterType="com.lcdt.userinfo.web.dto.SearchEmployeeDto" resultMap="BaseResultMap"
          >
    select DISTINCT user_comp_rel_id, comp.user_id,comp.is_enable, comp.comp_id,comp.full_name,comp.create_date,comp.is_create,comp.dept_ids,comp.duty
    from t_uc_user_comp_rel  comp
    <if test="realName != null and realName != ''">
      LEFT JOIN t_uc_user u on comp.user_id = u.user_id
    </if>

      LEFT JOIN role_user_relation r on r.user_id = comp.user_id
    and comp.comp_id = r.company_id
      left join t_uc_user_group g on comp.user_id = g.user_id
      and comp.comp_id = g.company_id
      WHERE 1=1

      <if test="companyId != null">
        and comp.comp_id = #{companyId}
      </if>
      <if test="realName != null and '' != realName ">
          and (u.real_name like
          CONCAT('%',#{realName,jdbcType=VARCHAR},'%')
           or u.phone like
          CONCAT('%',#{realName,jdbcType=VARCHAR},'%')
          )
      </if>
      <if test="roleId != null and '' != roleId">
        and r.role_id = #{roleId}
      </if>
      <if test="groupId != null and '' != groupId">
        and g.group_id = #{groupId}
      </if>
      <if test="departId != null and '' != departId ">
        and find_in_set(#{departId},dept_ids)
      </if>
  </select>

  <select id="selectByUserIdCompanyId" resultMap="BaseResultMap">
     select user_comp_rel_id, comp.user_id, comp_id,full_name,create_date,is_create,dept_ids,duty,dept_names
    from t_uc_user_comp_rel  comp
    WHERE
    comp.user_id = #{userId}
    and comp.comp_id = #{companyId}
  </select>

</mapper>