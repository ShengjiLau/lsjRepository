<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcdt.userinfo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.lcdt.userinfo.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="mobile_country" jdbcType="VARCHAR" property="mobileCountry" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="birthday" jdbcType="BIGINT" property="birthday" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="intro_memo" jdbcType="VARCHAR" property="introMemo" />
    <result column="register_date" jdbcType="TIMESTAMP" property="registerDate" />
    <result column="referrer_phone" jdbcType="VARCHAR" property="referrerPhone" />
    <result column="user_status" jdbcType="SMALLINT" property="userStatus" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_uc_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcdt.userinfo.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_uc_user (mobile_country, phone, email, 
      wechat, qq, real_name, 
      nick_name, pwd, birthday, 
      picture_url, intro_memo, register_date, 
      referrer_phone, user_status,last_login_time)
    values (#{mobileCountry,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{birthday,jdbcType=BIGINT},
      #{pictureUrl,jdbcType=VARCHAR}, #{introMemo,jdbcType=VARCHAR}, #{registerDate,jdbcType=TIMESTAMP}, 
      #{referrerPhone,jdbcType=VARCHAR}, #{userStatus,jdbcType=SMALLINT},#{lastLoginTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lcdt.userinfo.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_uc_user
    set mobile_country = #{mobileCountry,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=BIGINT},
      picture_url = #{pictureUrl,jdbcType=VARCHAR},
      intro_memo = #{introMemo,jdbcType=VARCHAR},
      register_date = #{registerDate,jdbcType=TIMESTAMP},
      referrer_phone = #{referrerPhone,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=SMALLINT},
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
      </if>

    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKeyWithoutPwd" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, mobile_country, phone, email, wechat, qq, real_name, nick_name,
    birthday, picture_url, intro_memo, register_date, referrer_phone, user_status
    from t_uc_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, mobile_country, phone, email, wechat, qq, real_name, nick_name, pwd, 
    birthday, picture_url, intro_memo, register_date, referrer_phone, user_status
    from t_uc_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, mobile_country, phone, email, wechat, qq, real_name, nick_name, pwd, 
    birthday, picture_url, intro_memo, register_date, referrer_phone, user_status
    from t_uc_user
  </select>

  <select id="queryByUserPhone" parameterType="java.lang.String"  resultMap="BaseResultMap">
    SELECT user_id, mobile_country, phone, email, wechat, qq, real_name, nick_name, pwd,
    birthday, picture_url, intro_memo, register_date, referrer_phone, user_status FROM t_uc_user
    WHERE phone = #{phone,jdbcType=VARCHAR}
  </select>


  <!--获取组下的员工-->
  <select id="selectUser4Group"  parameterType="java.util.Map"  resultMap="BaseResultMap">
      SELECT  u1.user_id, mobile_country, phone, email, wechat, qq, real_name, nick_name, (null) as pwd,
      birthday, picture_url, intro_memo, register_date, referrer_phone, user_status FROM t_uc_user u1
      left join t_uc_user_comp_rel r1 on r1.user_id=u1.user_id
      <if test="groupId!=null">
         WHERE r1.user_id in(select g1.user_id from t_uc_user_group g1 where g1.company_id=#{companyId,jdbcType=BIGINT} and g1.group_id=#{groupId,jdbcType=BIGINT})
      </if>
      <if test="groupIdNot!=null">
          WHERE r1.user_id in(select g1.user_id from t_uc_user_group g1 where g1.company_id=#{companyId,jdbcType=BIGINT} and g1.group_id!=#{groupIdNot,jdbcType=BIGINT})
      </if>
  </select>


</mapper>