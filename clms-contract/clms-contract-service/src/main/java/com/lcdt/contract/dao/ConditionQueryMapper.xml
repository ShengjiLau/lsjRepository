<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcdt.contract.dao.ConditionQueryMapper" >
<select id="selectByCondition" resultType="com.lcdt.contract.model.Order">
    select order_id, supplier, order_no, order_type, contract_code, distribution_type, 
    pay_type, receive_warehouse, file_url, sender, sender_phone, send_province, send_city, 
    send_district, send_address, send_time, pack_require, receiver, receiver_phone, receiver_province, 
    receiver_city, receive_district, receive_address, remarks, create_time, group_id,company_id
    from t_order
    <where>
      type = #{type,jdbcType=VARCHAR} and company_id = #{companyId,jdbcType=BIGINT}
      <if test="supplier!=null and supplier!=''">
        and supplier like concat('%',#{supplier,jdbcType=VARCHAR},'%')
      </if>
      <if test="order_no!=null and order_no!=''">
        and order_no like concat('%',#{contractCode,jdbcType=VARCHAR},'%')
      </if>
      <if test="beginTime!=null and endTime!=''">
        and create_time &gt; #{beginTime,jdbcType=TIMESTAMP} and create_time &lt; #{endTime,jdbcType=TIMESTAMP}
      </if>
      <if test="status!=null and status!=''">
        and status = #{status,jdbcType=SMALLINT}
      </if>
      <if test="groupId!=null and groupId!=''">
        and group_id = #{groupId,jdbcType=BIGINT}
      </if>
      <if test="approvalStatus!=null and approvalStatus!=''">
        and approval_status = #{approvalStatus,jdbcType=SMALLINT}
      </if>
    </where>
  </select>
  <select id="selectByOrderId" resultType="com.lcdt.contract.model.OrderProduct" parameterType="java.lang.Long" >
    select 
    op_id opId, order_id orderId, name, code, sku, num, price, total
    from t_order_product
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  
  <select id="selectOrderProductIdByOrderId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select 
    op_id opId
    from t_order_product
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  
  <insert id="insertOrderProductByBatch">
    insert into t_order_product (op_id, order_id, name, 
      code, sku, num, price, 
      total)
    values 
    <foreach item="item" collection="List" separator=",">
      (#{opId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{sku,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{total,jdbcType=DECIMAL})
    </foreach>
  </insert>
  
  <update id="updateOrderProductByBatch" parameterType="java.util.List">
    <foreach separator=";" index="index" item="item" collection="list" close="" open="">
      update t_order_product
      set order_id = #{orderId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      code= #{code,jdbcType=VARCHAR},
      sku = #{sku,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      total = #{total,jdbcType=DECIMAL}
      where op_id = #{opId,jdbcType=BIGINT}
    </foreach>
  </update>
  
  <delete id="deleteOrderProducByBatch" parameterType="java.util.List">
  	 <foreach separator=";" index="index" item="opId" collection="list" close="" open="">
     delete 
     from t_order_product
     where op_id=#{opId,jdbcType=BIGINT}
    </foreach>
  </delete>
  	
  	
  	
  	
</mapper>