<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcdt.traffic.dao.FeeFlowMapper">
  <resultMap id="BaseResultMap" type="com.lcdt.traffic.model.FeeFlow">
    <id column="flow_id" jdbcType="BIGINT" property="flowId" />
    <result column="flow_code" jdbcType="VARCHAR" property="flowCode" />
    <result column="waybill_id" jdbcType="BIGINT" property="waybillId" />
    <result column="waybill_code" jdbcType="VARCHAR" property="waybillCode" />
    <result column="waybill_date" jdbcType="TIMESTAMP" property="waybillDate" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="pro_id" jdbcType="BIGINT" property="proId" />
    <result column="fee_property" jdbcType="VARCHAR" property="feeProperty" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="original_money" jdbcType="REAL" property="originalMoney" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="is_receivable" jdbcType="SMALLINT" property="isReceivable" />
    <result column="is_deleted" jdbcType="SMALLINT" property="isDeleted" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_fee_flow
    where flow_id = #{flowId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcdt.traffic.model.FeeFlow">
    <selectKey keyProperty="flowId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_fee_flow (flow_code, account_id, pro_id,
    waybill_id, waybill_code, waybill_date,
    fee_property, money, original_money,
    group_id, create_id, create_name,
    create_date, update_id, update_name,
    update_time, company_id, is_deleted,is_receivable
    )
    values (#{flowCode,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, #{proId,jdbcType=BIGINT},
    #{waybillId,jdbcType=BIGINT}, #{waybillCode,jdbcType=VARCHAR}, #{waybillDate,jdbcType=TIMESTAMP},
    #{feeProperty,jdbcType=VARCHAR}, #{money,jdbcType=REAL}, #{originalMoney,jdbcType=REAL},
    #{groupId,jdbcType=BIGINT}, #{createId,jdbcType=BIGINT}, #{createName,jdbcType=VARCHAR},
    #{createDate,jdbcType=TIMESTAMP}, #{updateId,jdbcType=BIGINT}, #{updateName,jdbcType=VARCHAR},
    #{updateTime,jdbcType=TIMESTAMP}, #{companyId,jdbcType=BIGINT}, #{isDeleted,jdbcType=SMALLINT}, #{isReceivable,jdbcType=SMALLINT}
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.lcdt.traffic.model.FeeFlow">
    update t_fee_flow
    set flow_code = #{flowCode,jdbcType=VARCHAR},
    waybill_id = #{waybillId,jdbcType=BIGINT},
    waybill_code = #{waybillCode,jdbcType=VARCHAR},
    waybill_date = #{waybillDate,jdbcType=TIMESTAMP},
    account_id = #{accountId,jdbcType=BIGINT},
    pro_id = #{proId,jdbcType=BIGINT},
    fee_property = #{feeProperty,jdbcType=VARCHAR},
    money = #{money,jdbcType=REAL},
    original_money = #{originalMoney,jdbcType=REAL},
    group_id = #{groupId,jdbcType=BIGINT},
    create_id = #{createId,jdbcType=BIGINT},
    create_name = #{createName,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    update_id = #{updateId,jdbcType=BIGINT},
    update_name = #{updateName,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    company_id = #{companyId,jdbcType=BIGINT},
    is_deleted = #{isDeleted,jdbcType=SMALLINT},
    is_receivable = #{isReceivable,jdbcType=SMALLINT}
    where flow_id = #{flowId,jdbcType=BIGINT}
  </update>

  <sql id="Base_Column_List">
   flow_id,flow_code, account_id, pro_id,
   waybill_id, waybill_code, waybill_date,
    fee_property, money, original_money,
    group_id, create_id, create_name,
    create_date, update_id, update_name,
    update_time, company_id, is_deleted
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select flow_id, flow_code, account_id, pro_id, fee_property, money, original_money,
    group_id, create_id, create_name, create_date, update_id, update_name, update_time,
    company_id, is_deleted,is_receivable, waybill_id, waybill_code, waybill_date
    from t_fee_flow
    where flow_id = #{flowId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select flow_id, flow_code, account_id, pro_id, fee_property, money, original_money,
    group_id, create_id, create_name, create_date, update_id, update_name, update_time,
    company_id, is_deleted,is_receivable, waybill_id, waybill_code, waybill_date
    from t_fee_flow
  </select>
  <select id="selectByAccountId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_fee_flow
    where account_id = #{accountId,jdbcType=BIGINT}
    order by flow_id desc
  </select>
  <select id="selectByProId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_fee_flow
    where pro_id = #{proId,jdbcType=BIGINT} and is_deleted = 0
    order by flow_id desc
  </select>

  <insert id="insertBatch">
    insert into t_fee_flow (flow_code, account_id, pro_id,
    waybill_id, waybill_code, waybill_date,
    fee_property, money, original_money,
    group_id, create_id, create_name,
    create_date, update_id, update_name,
    update_time, company_id, is_deleted
    )
    values
    <foreach item="item" collection="list" separator=",">
      (#{flowCode,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, #{proId,jdbcType=BIGINT},
      #{waybillId,jdbcType=BIGINT}, #{waybillCode,jdbcType=VARCHAR}, #{waybillDate,jdbcType=TIMESTAMP},
      #{feeProperty,jdbcType=VARCHAR}, #{money,jdbcType=REAL}, #{originalMoney,jdbcType=REAL},
      #{groupId,jdbcType=BIGINT}, #{createId,jdbcType=BIGINT}, #{createName,jdbcType=VARCHAR},
      #{createDate,jdbcType=TIMESTAMP}, #{updateId,jdbcType=BIGINT}, #{updateName,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{companyId,jdbcType=BIGINT}, #{isDeleted,jdbcType=SMALLINT}
      )
    </foreach>
  </insert>
  <update id="updateBatch" parameterType="java.util.List">
    <foreach separator=";" index="index" item="item" collection="list" close="" open="">
      update t_fee_flow
      <set>
        <if test="item.flowCode != null">
          flow_code = #{item.flowCode,jdbcType=VARCHAR},
        </if>
        <if test="item.waybillId != null">
          waybill_id = #{item.waybillId,jdbcType=BIGINT},
        </if>
        <if test="item.waybillCode != null">
          waybill_code = #{item.waybillCode,jdbcType=VARCHAR},
        </if>
        <if test="item.waybillDate != null">
          waybill_date = #{item.waybillDate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.accountId != null">
          account_id = #{item.accountId,jdbcType=BIGINT},
        </if>
        <if test="item.proId != null">
          pro_id = #{item.proId,jdbcType=BIGINT},
        </if>
        <if test="item.feeProperty != null">
          fee_property = #{item.feeProperty,jdbcType=VARCHAR},
        </if>
        <if test="item.money != null">
          money = #{item.money,jdbcType=REAL},
        </if>
        <if test="item.originalMoney != null">
          original_money = #{item.originalMoney,jdbcType=REAL},
        </if>
        <if test="item.groupId != null">
          group_id = #{item.groupId,jdbcType=BIGINT},
        </if>
        <if test="item.createId != null">
          create_id = #{item.createId,jdbcType=BIGINT},
        </if>
        <if test="item.createName != null">
          create_name = #{item.createName,jdbcType=VARCHAR},
        </if>
        <if test="item.createDate != null">
          create_date = #{item.createDate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateId != null">
          update_id = #{item.updateId,jdbcType=BIGINT},
        </if>
        <if test="item.updateName != null">
          update_name = #{item.updateName,jdbcType=VARCHAR},
        </if>
        <if test="item.updateTime != null">
          update_time = #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.companyId != null">
          company_id = #{item.companyId,jdbcType=BIGINT},
        </if>
        <if test="item.isDeleted != null">
          is_deleted = #{item.isDeleted,jdbcType=SMALLINT},
        </if>
      </set>
      where account_id = #{item.accountId,jdbcType=BIGINT}
    </foreach>
  </update>

  <resultMap id="searchMap" type="com.lcdt.traffic.dto.FeeFlow4SearchResultDto">
    <id column="flow_code" jdbcType="VARCHAR" property="flowCode" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="waybill_code" jdbcType="VARCHAR" property="waybillCode" />
    <result column="reconcile_code" jdbcType="VARCHAR" property="reconcileCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="fee_property" jdbcType="VARCHAR" property="feeProperty" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="original_money" jdbcType="REAL" property="originalMoney" />
  </resultMap>

  <select id="searchCondition" parameterType="com.lcdt.traffic.dto.FeeFlow4SearchParamsDto" resultMap="searchMap">
    select f.flow_code,f.create_date,a.group_name,a.waybill_code,a.reconcile_code,a.name,f.fee_property,f.money,f.original_money,
    waybill_id,waybill_code, waybill_date
    from t_fee_flow f
    LEFT JOIN t_fee_account a  ON  f.account_id = a.account_id
    <where>
      <if test="isDeleted!=null">
        and  f.is_deleted = #{isDeleted,jdbcType=SMALLINT}
      </if>
      <if test="groupIds!=null and groupIds!=''">
        and  f.group_id in (#{groupIds,jdbcType=VARCHAR})
      </if>
      <if test="companyId!=null">
        and  f.company_id = #{companyId,jdbcType=BIGINT}
      </if>
      <if test="isReceivable!=null">
        and  f.is_receivable = #{isReceivable,jdbcType=SMALLINT}
      </if>
      <if test="nameId!=null and nameId>0">
        and  a.name_id = #{nameId,jdbcType=BIGINT}
      </if>
      <if test="proId!=null and proId>0">
        and  f.pro_id = #{proId,jdbcType=SMALLINT}
      </if>
      <if test="flowCode!=null and flowCode!=''">
        and f.flow_code like concat('%',#{flowCode,jdbcType=VARCHAR},'%')
      </if>
      <if test="waybillCode!=null and waybillCode!=''">
        and a.waybill_code like concat('%',#{waybillCode,jdbcType=VARCHAR},'%')
      </if>
      <if test="reconcileCode!=null and waybillCode!=''">
        and a.reconcile_code like concat('%',#{reconcileCode,jdbcType=VARCHAR},'%')
      </if>
      <if test="createBegin!=null and createBegin!=''">
        and  f.create_date >= #{createBegin,jdbcType=TIMESTAMP}
      </if>
      <if test="createEnd!=null and createEnd!=''">
        and  #{createEnd,jdbcType=TIMESTAMP} >= f.create_date
      </if>
    </where>
    order by flow_code desc
  </select>


  <!--应收应付统计-->
  <select id="receivePayStat" parameterType="com.lcdt.traffic.dto.ReceivePayParamsDto" resultType="Map">
    SELECT
    dt,
    ${statCols}
    FROM
    (SELECT pro_id,money,dt FROM t_date t
        LEFT JOIN (SELECT pro_id, sum(money) as money,date(f.create_date) as create_date
        FROM t_fee_flow f
        LEFT JOIN t_fee_account a ON f.account_id = a.account_id
          <where>
                    <if test="isDeleted!=null">
                      and  f.is_deleted = #{isDeleted,jdbcType=SMALLINT}
                    </if>                    <if test="groupIds!=null and groupIds!=''">
                      and  f.group_id in (#{groupIds,jdbcType=VARCHAR})
                    </if>
                    <if test="companyId!=null">
                      and  f.company_id = #{companyId,jdbcType=BIGINT}
                    </if>
                    <if test="isReceivable!=null">
                      and  f.is_receivable = #{isReceivable,jdbcType=SMALLINT}
                    </if>
                    <if test="nameId!=null and nameId>0">
                      and  a.name_id = #{nameId,jdbcType=BIGINT}
                    </if>
                     <if test="createBegin!=null and createBegin!=''">
                      and  date(f.create_date) >= #{createBegin,jdbcType=TIMESTAMP}
                    </if>
                    <if test="createEnd!=null and createEnd!=''">
                      and  #{createEnd,jdbcType=TIMESTAMP} >= date(f.create_date)
                    </if>
                  </where>
                 group by pro_id ) t1 on t.dt= t1.create_date
        <where>
          <if test="createBegin!=null and createBegin!=''">
            and date(dt) >= #{createBegin,jdbcType=TIMESTAMP}
          </if>
          <if test="createEnd!=null and createEnd!=''">
            and  #{createEnd,jdbcType=TIMESTAMP} >= date(dt)
          </if>
        </where>
       order by dt ASC
    ) t_view
    group by t_view.dt
  </select>


  <resultMap id="profitStatMap" type="com.lcdt.traffic.dto.ProfitStatResultDto">
    <id column="waybill_code" jdbcType="VARCHAR" property="waybillCode" />
    <result column="waybill_code" jdbcType="VARCHAR" property="waybillCode" />
    <result column="waybill_date" jdbcType="TIMESTAMP" property="waybillDate" />
    <result column="receiveMoney" jdbcType="REAL" property="receiveMoney" />
    <result column="payMoney" jdbcType="REAL" property="payMoney" />
  </resultMap>

  <!--财务统计-->
  <select id="profitStat" parameterType="com.lcdt.traffic.dto.ProfitStatParamsDto"  resultMap="profitStatMap">
      SELECT waybill_code,waybill_date,
              sum(case when is_receivable=0 then money else 0 end) as receiveMoney,
              sum(case when is_receivable=1 then money else 0 end) as payMoney
      from t_fee_flow
      <where>
        <if test="isDeleted!=null">
          and  is_deleted = #{isDeleted,jdbcType=SMALLINT}
        </if>
        <if test="groupIds!=null and groupIds!=''">
          and  group_id in (#{groupIds,jdbcType=VARCHAR})
        </if>
        <if test="companyId!=null">
          and  company_id = #{companyId,jdbcType=BIGINT}
        </if>
        <if test="waybillCode!=null and waybillCode!=''">
          and waybill_code like concat('%',#{waybillCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="createBegin!=null and createBegin!=''">
          and  date(waybill_date) >= #{createBegin,jdbcType=TIMESTAMP}
        </if>
        <if test="createEnd!=null and createEnd!=''">
          and  #{createEnd,jdbcType=TIMESTAMP} >= date(waybill_date)
        </if>
      </where>
     GROUP BY waybill_code DESC
  </select>



</mapper>