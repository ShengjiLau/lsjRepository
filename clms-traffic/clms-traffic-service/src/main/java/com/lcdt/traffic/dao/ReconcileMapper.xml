<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcdt.traffic.dao.ReconcileMapper" >
  <resultMap id="BaseResultMap" type="com.lcdt.traffic.model.Reconcile" >
    <id column="reconcile_id" property="reconcileId" jdbcType="BIGINT" />
    <result column="reconcile_code" property="reconcileCode" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="account_amount" property="accountAmount" jdbcType="DOUBLE" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
    <result column="is_receivable" property="isReceivable" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="cancel_ok" property="cancelOk" jdbcType="SMALLINT" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="waybill_id" property="waybillId" jdbcType="VARCHAR" />
    <result column="payee_type" property="payeeType" jdbcType="SMALLINT" />
    <result column="payer_id" property="payerId" jdbcType="BIGINT" />
    <result column="payer_name" property="payerName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    reconcile_id, reconcile_code, company_id, group_id, account_amount, operator_id, 
    operator_name, is_receivable, create_time, cancel_ok, account_id, waybill_id, payee_type, 
    payer_id, payer_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_fee_reconcile
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_fee_reconcile
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcdt.traffic.model.Reconcile" >
    insert into t_fee_reconcile (reconcile_id, reconcile_code, company_id, 
      group_id, account_amount, operator_id, 
      operator_name, is_receivable, create_time, 
      cancel_ok, account_id, waybill_id, 
      payee_type, payer_id, payer_name
      )
    values (#{reconcileId,jdbcType=BIGINT}, #{reconcileCode,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}, 
      #{groupId,jdbcType=VARCHAR}, #{accountAmount,jdbcType=DOUBLE}, #{operatorId,jdbcType=BIGINT}, 
      #{operatorName,jdbcType=VARCHAR}, #{isReceivable,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{cancelOk,jdbcType=SMALLINT}, #{accountId,jdbcType=VARCHAR}, #{waybillId,jdbcType=VARCHAR}, 
      #{payeeType,jdbcType=SMALLINT}, #{payerId,jdbcType=BIGINT}, #{payerName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lcdt.traffic.model.Reconcile" >
    insert into t_fee_reconcile
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reconcileId != null" >
        reconcile_id,
      </if>
      <if test="reconcileCode != null" >
        reconcile_code,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="accountAmount != null" >
        account_amount,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="operatorName != null" >
        operator_name,
      </if>
      <if test="isReceivable != null" >
        is_receivable,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="cancelOk != null" >
        cancel_ok,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="waybillId != null" >
        waybill_id,
      </if>
      <if test="payeeType != null" >
        payee_type,
      </if>
      <if test="payerId != null" >
        payer_id,
      </if>
      <if test="payerName != null" >
        payer_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reconcileId != null" >
        #{reconcileId,jdbcType=BIGINT},
      </if>
      <if test="reconcileCode != null" >
        #{reconcileCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="accountAmount != null" >
        #{accountAmount,jdbcType=DOUBLE},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="isReceivable != null" >
        #{isReceivable,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelOk != null" >
        #{cancelOk,jdbcType=SMALLINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="waybillId != null" >
        #{waybillId,jdbcType=VARCHAR},
      </if>
      <if test="payeeType != null" >
        #{payeeType,jdbcType=SMALLINT},
      </if>
      <if test="payerId != null" >
        #{payerId,jdbcType=BIGINT},
      </if>
      <if test="payerName != null" >
        #{payerName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcdt.traffic.model.Reconcile" >
    update t_fee_reconcile
    <set >
      <if test="reconcileCode != null" >
        reconcile_code = #{reconcileCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="accountAmount != null" >
        account_amount = #{accountAmount,jdbcType=DOUBLE},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="isReceivable != null" >
        is_receivable = #{isReceivable,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelOk != null" >
        cancel_ok = #{cancelOk,jdbcType=SMALLINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="waybillId != null" >
        waybill_id = #{waybillId,jdbcType=VARCHAR},
      </if>
      <if test="payeeType != null" >
        payee_type = #{payeeType,jdbcType=SMALLINT},
      </if>
      <if test="payerId != null" >
        payer_id = #{payerId,jdbcType=BIGINT},
      </if>
      <if test="payerName != null" >
        payer_name = #{payerName,jdbcType=VARCHAR},
      </if>
    </set>
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcdt.traffic.model.Reconcile" >
    update t_fee_reconcile
    set reconcile_code = #{reconcileCode,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=VARCHAR},
      account_amount = #{accountAmount,jdbcType=DOUBLE},
      operator_id = #{operatorId,jdbcType=BIGINT},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      is_receivable = #{isReceivable,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      cancel_ok = #{cancelOk,jdbcType=SMALLINT},
      account_id = #{accountId,jdbcType=VARCHAR},
      waybill_id = #{waybillId,jdbcType=VARCHAR},
      payee_type = #{payeeType,jdbcType=SMALLINT},
      payer_id = #{payerId,jdbcType=BIGINT},
      payer_name = #{payerName,jdbcType=VARCHAR}
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </update>
  <insert id="insertByBatch" useGeneratedKeys="true" keyProperty="reconcileId" keyColumn="reconcile_id">
  	insert into t_fee_reconcile (reconcile_id, reconcile_code, company_id, 
      group_id, account_amount, operator_id, 
      operator_name, is_receivable, create_time, 
      cancel_ok, account_id, waybill_id, 
      payee_type, payer_id, payer_name
      )
  <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
    values (#{item.reconcileId,jdbcType=BIGINT}, #{item.reconcileCode,jdbcType=VARCHAR}, #{item.companyId,jdbcType=BIGINT}, 
      #{item.groupId,jdbcType=VARCHAR}, #{item.accountAmount,jdbcType=DOUBLE}, #{item.operatorId,jdbcType=BIGINT}, 
      #{item.operatorName,jdbcType=VARCHAR}, #{item.isReceivable,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, 
      #{item.cancelOk,jdbcType=SMALLINT}, #{item.accountId,jdbcType=VARCHAR}, #{item.waybillId,jdbcType=VARCHAR}, 
      #{item.payeeType,jdbcType=SMALLINT}, #{item.payerId,jdbcType=BIGINT}, #{item.payerName,jdbcType=VARCHAR}
      )
  </foreach>
  </insert>
  
  <update id="cancelByBatch">
    update t_fee_reconcile
    <set>
    cancel_ok = 1
    </set>
  	<foreach collection="array" index="index" item="reconcileId" open="(" separator="," close=")">	
  	<where>
  	reconcile_id = #{reconcileId,jdbcType=BIGINT}
  	</where>
  	</foreach>
  </update>
  
  <select id="getReconcileList" resultMap="BaseResultMap" parameterType="com.lcdt.traffic.web.dto.ReconcileDto">
   select 
    <include refid="Base_Column_List" />
    from t_fee_reconcile
    <where>
    cancel_ok=1 and company_id =#{companyId,jdbcType=BIGINT} and is_receivable =#{isReceivable,jdbcType=BIGINT}
    <if test="beginTime!=null and beginTime!=''">
    and create_time &gt; concat(#{beginTime,jdbcType=VARCHAR},'000000')
    </if>
    <if test="endTime!=null and endTime!=''">
    and create_time &lt; concat(#{endTime,jdbcType=VARCHAR},'235959')
    </if>
    <if test="payerName!=null and payerName!=''">
    and payer_name like concat('%',#{payerName,jdbcType=VARCHAR},'%')
    </if>
    <if test="groupId!=null and groupId!=''">
    and FIND_IN_SET(#{groupId,jdbcType=VARCHAR},group_id)
    </if>
    <if test="reconcileCode!=null and reconcileCode!=''">
    and reconcile_code like concat('%',#{reconcileCode,jdbcType=VARCHAR},'%')
    </if>
    </where>
  </select>
  
  <select id="getReconcileListByPk" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_fee_reconcile
    <foreach collection="array" index="index" item="reconcileId" open="(" separator="," close=")">
    <where>
 	reconcile_id = #{reconcileId,jdbcType=BIGINT}
  	</where>
    </foreach>
   </select>
  
  
</mapper>