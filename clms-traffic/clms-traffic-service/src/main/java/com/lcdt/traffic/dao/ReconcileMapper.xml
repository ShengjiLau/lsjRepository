<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcdt.traffic.dao.ReconcileMapper" >
  <resultMap id="BaseResultMap" type="com.lcdt.traffic.model.Reconcile">
    <id column="reconcile_id" jdbcType="BIGINT" property="reconcileId" />
    <result column="reconcile_code" jdbcType="VARCHAR" property="reconcileCode" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="account_amount" jdbcType="DOUBLE" property="accountAmount" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="cancel_ok" jdbcType="SMALLINT" property="cancelOk" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="waybill_id" jdbcType="VARCHAR" property="waybillId" />
    <result column="payee_type" jdbcType="SMALLINT" property="payeeType" />
    <result column="payer_id" jdbcType="BIGINT" property="payerId" />
    <result column="payer_name" jdbcType="VARCHAR" property="payerName" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
  </resultMap>
  <sql id="Base_Column_List">
    reconcile_id, reconcile_code, company_id, account_amount, operator_id, operator_name, 
    create_time, cancel_ok, account_id, waybill_id, payee_type, payer_id, payer_name, 
    group_id, group_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_fee_reconcile
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_fee_reconcile
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </delete>
 <insert id="insert" parameterType="com.lcdt.traffic.model.Reconcile" >
  insert into t_fee_reconcile (reconcile_id, reconcile_code, company_id, 
      account_amount, operator_id, operator_name, 
      create_time, cancel_ok, account_id, 
      waybill_id, payee_type, payer_id, 
      payer_name, group_id, group_name
      )
    values (#{reconcileId,jdbcType=BIGINT}, #{reconcileCode,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}, 
      #{accountAmount,jdbcType=DOUBLE}, #{operatorId,jdbcType=BIGINT}, #{operatorName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{cancelOk,jdbcType=SMALLINT}, #{accountId,jdbcType=VARCHAR}, 
      #{waybillId,jdbcType=VARCHAR}, #{payeeType,jdbcType=SMALLINT}, #{payerId,jdbcType=BIGINT}, 
      #{payerName,jdbcType=VARCHAR}, #{groupId,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.lcdt.traffic.model.Reconcile">
    insert into t_fee_reconcile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reconcileId != null">
        reconcile_id,
      </if>
      <if test="reconcileCode != null">
        reconcile_code,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="accountAmount != null">
        account_amount,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="cancelOk != null">
        cancel_ok,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="waybillId != null">
        waybill_id,
      </if>
      <if test="payeeType != null">
        payee_type,
      </if>
      <if test="payerId != null">
        payer_id,
      </if>
      <if test="payerName != null">
        payer_name,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reconcileId != null">
        #{reconcileId,jdbcType=BIGINT},
      </if>
      <if test="reconcileCode != null">
        #{reconcileCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="accountAmount != null">
        #{accountAmount,jdbcType=DOUBLE},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelOk != null">
        #{cancelOk,jdbcType=SMALLINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="waybillId != null">
        #{waybillId,jdbcType=VARCHAR},
      </if>
      <if test="payeeType != null">
        #{payeeType,jdbcType=SMALLINT},
      </if>
      <if test="payerId != null">
        #{payerId,jdbcType=BIGINT},
      </if>
      <if test="payerName != null">
        #{payerName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
 <update id="updateByPrimaryKeySelective" parameterType="com.lcdt.traffic.model.Reconcile" >
     update t_fee_reconcile
    <set >
      <if test="reconcileCode != null" >
        reconcile_code = #{reconcileCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="accountAmount != null" >
        account_amount = #{accountAmount,jdbcType=DOUBLE},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelOk != null" >
        cancel_ok = #{cancelOk,jdbcType=SMALLINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="waybillId != null" >
        waybill_id = #{waybillId,jdbcType=VARCHAR},
      </if>
      <if test="payeeType != null" >
        payee_type = #{payeeType,jdbcType=SMALLINT},
      </if>
      <if test="payerId != null" >
        payer_id = #{payerId,jdbcType=BIGINT},
      </if>
      <if test="payerName != null" >
        payer_name = #{payerName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
    </set>
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.lcdt.traffic.model.Reconcile">
    update t_fee_reconcile
    set reconcile_code = #{reconcileCode,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      account_amount = #{accountAmount,jdbcType=DOUBLE},
      operator_id = #{operatorId,jdbcType=BIGINT},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      cancel_ok = #{cancelOk,jdbcType=SMALLINT},
      account_id = #{accountId,jdbcType=VARCHAR},
      waybill_id = #{waybillId,jdbcType=VARCHAR},
      payee_type = #{payeeType,jdbcType=SMALLINT},
      payer_id = #{payerId,jdbcType=BIGINT},
      payer_name = #{payerName,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=BIGINT},
      group_name = #{groupName,jdbcType=VARCHAR}
    where reconcile_id = #{reconcileId,jdbcType=BIGINT}
  </update>
  
  <insert id="insertByBatch" useGeneratedKeys="true" keyProperty="reconcileId" keyColumn="reconcile_id">
   insert into t_fee_reconcile (reconcile_id, reconcile_code, company_id, 
      account_amount, operator_id, operator_name, 
      create_time, cancel_ok, account_id, 
      waybill_id, payee_type, payer_id, 
      payer_name, group_id, group_name)
    values 
  <foreach collection="list" index="index" item="rec" open="" separator="," close="">  
  (#{rec.reconcileId,jdbcType=BIGINT}, 
  <choose>
    <when test="rec.payeeType==0">
    RECONCILE_CODE('YS'),
    </when>
    <when test="rec.payeeType==1">
    RECONCILE_CODE('YF'),
    </when>
    <otherwise>
    'null',
    </otherwise>
    </choose>
      #{rec.companyId,jdbcType=BIGINT}, 
      #{rec.accountAmount,jdbcType=DOUBLE}, #{rec.operatorId,jdbcType=BIGINT}, #{rec.operatorName,jdbcType=VARCHAR}, 
      CURRENT_TIMESTAMP, #{rec.cancelOk,jdbcType=SMALLINT}, #{rec.accountId,jdbcType=VARCHAR}, 
      #{rec.waybillId,jdbcType=VARCHAR}, #{rec.payeeType,jdbcType=SMALLINT}, #{rec.payerId,jdbcType=BIGINT}, 
      #{rec.payerName,jdbcType=VARCHAR}, #{rec.groupId,jdbcType=BIGINT},#{groupName,jdbcType=VARCHAR})
  </foreach>
  </insert>
  
  <update id="cancelByBatch">
    update t_fee_reconcile
    <set>
    cancel_ok = 1
    </set>	
  	<where>
  	reconcile_id in
  	(#{reconcileIdList,jdbcType=VARCHAR})
  	</where>
  </update>
  
  <select id="getReconcileList" resultType="com.lcdt.traffic.web.dto.ReconcileDto" parameterType="com.lcdt.traffic.web.dto.ReconcileDto">
    select 
    reconcile_id reconcileId, reconcile_code reconcileCode, company_id companyId, account_amount accountAmount, operator_id operatorId, 
    operator_name operatorName, 
    create_time createTime, cancel_ok cancelOk, account_id accountId, waybill_id waybillId, payee_type payeeType, 
    payer_id payerId, payer_name payerName, 
    group_id groupId, group_name groupName
    from t_fee_reconcile
    <where>
    cancel_ok=0 and company_id =#{companyId,jdbcType=BIGINT} and  payee_type = #{payeeType,jdbcType=SMALLINT}
    <if test="beginTime!=null and beginTime!=''">
    and create_time &gt; concat(#{beginTime,jdbcType=VARCHAR},'000000')
    </if>
    <if test="endTime!=null and endTime!=''">
    and create_time &lt; concat(#{endTime,jdbcType=VARCHAR},'235959')
    </if>
    <if test="payerName!=null and payerName!=''">
    and payer_name like concat('%',#{payerName,jdbcType=VARCHAR},'%')
    </if>
    <if test="reconcileCode!=null and reconcileCode!=''">
    and reconcile_code like concat('%',#{reconcileCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="groupId !=null">
    and group_id =#{groupId,jdbcType=BIGINT}
    </if>
    </where>
    order by create_time desc
  </select>
  
  <select id="getReconcileListByPk" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_fee_reconcile
    <where>
    reconcile_id in
    (#{reconcileIds,jdbcType=VARCHAR})
  	</where>
   </select>

  
</mapper>