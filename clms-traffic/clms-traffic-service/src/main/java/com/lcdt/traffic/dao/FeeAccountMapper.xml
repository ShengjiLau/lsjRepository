<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcdt.traffic.dao.FeeAccountMapper">
  <resultMap id="BaseResultMap" type="com.lcdt.traffic.model.FeeAccount">
    <id column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="waybill_id" jdbcType="BIGINT" property="waybillId" />
    <result column="waybill_code" jdbcType="VARCHAR" property="waybillCode" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="name_id" jdbcType="BIGINT" property="nameId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="audit_status" jdbcType="SMALLINT" property="auditStatus" />
    <result column="audit_date" jdbcType="TIMESTAMP" property="auditDate" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="reconcile_id" jdbcType="BIGINT" property="reconcileId" />
    <result column="reconcile_code" jdbcType="VARCHAR" property="reconcileCode" />
    <result column="is_receivable" jdbcType="SMALLINT" property="isReceivable" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_deleted" jdbcType="SMALLINT" property="isDeleted" />
  </resultMap>
  <resultMap id="BaseResultDtoMap" type="com.lcdt.traffic.web.dto.FeeAccountDto" extends="BaseResultMap">
    <result column="freight_total" jdbcType="REAL" property="freightTotal" />
    <result column="other_fee_total" jdbcType="REAL" property="otherFeeTotal" />
    <result column="fee_total" jdbcType="REAL" property="feeTotal" />
    <collection property="feeFlowList" column="account_id" ofType="com.lcdt.traffic.model.FeeFlow" select="com.lcdt.traffic.dao.FeeFlowMapper.selectByAccountId"/>
  </resultMap>
  <sql id="Base_Column_List">
    account_id, account_code, company_id, waybill_id, waybill_code, group_id, group_name, 
    name_id, name, audit_status, audit_date, operator_id, operator_name, reconcile_id, 
    reconcile_code, is_receivable, create_date, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_fee_account
    where account_id = #{accountId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_fee_account
    where account_id = #{accountId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcdt.traffic.model.FeeAccount">
    <selectKey keyProperty="accountId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_fee_account (account_code, company_id, waybill_id, 
      waybill_code, group_id, group_name, 
      name_id, name, audit_status, 
      audit_date, operator_id, operator_name, 
      reconcile_id, reconcile_code, is_receivable, 
      create_date, is_deleted)
    values (#{accountCode,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}, #{waybillId,jdbcType=BIGINT}, 
      #{waybillCode,jdbcType=VARCHAR}, #{groupId,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}, 
      #{nameId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{auditStatus,jdbcType=SMALLINT}, 
      #{auditDate,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=BIGINT}, #{operatorName,jdbcType=VARCHAR}, 
      #{reconcileId,jdbcType=BIGINT}, #{reconcileCode,jdbcType=VARCHAR}, #{isReceivable,jdbcType=SMALLINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lcdt.traffic.model.FeeAccount">
    <selectKey keyProperty="accountId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_fee_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="waybillId != null">
        waybill_id,
      </if>
      <if test="waybillCode != null">
        waybill_code,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="nameId != null">
        name_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="auditDate != null">
        audit_date,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="reconcileId != null">
        reconcile_id,
      </if>
      <if test="reconcileCode != null">
        reconcile_code,
      </if>
      <if test="isReceivable != null">
        is_receivable,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="waybillId != null">
        #{waybillId,jdbcType=BIGINT},
      </if>
      <if test="waybillCode != null">
        #{waybillCode,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="nameId != null">
        #{nameId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=SMALLINT},
      </if>
      <if test="auditDate != null">
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="reconcileId != null">
        #{reconcileId,jdbcType=BIGINT},
      </if>
      <if test="reconcileCode != null">
        #{reconcileCode,jdbcType=VARCHAR},
      </if>
      <if test="isReceivable != null">
        #{isReceivable,jdbcType=SMALLINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcdt.traffic.model.FeeAccount">
    update t_fee_account
    <set>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="waybillId != null">
        waybill_id = #{waybillId,jdbcType=BIGINT},
      </if>
      <if test="waybillCode != null">
        waybill_code = #{waybillCode,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="nameId != null">
        name_id = #{nameId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=SMALLINT},
      </if>
      <if test="auditDate != null">
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorName != null">
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="reconcileId != null">
        reconcile_id = #{reconcileId,jdbcType=BIGINT},
      </if>
      <if test="reconcileCode != null">
        reconcile_code = #{reconcileCode,jdbcType=VARCHAR},
      </if>
      <if test="isReceivable != null">
        is_receivable = #{isReceivable,jdbcType=SMALLINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=SMALLINT},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcdt.traffic.model.FeeAccount">
    update t_fee_account
    set account_code = #{accountCode,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      waybill_id = #{waybillId,jdbcType=BIGINT},
      waybill_code = #{waybillCode,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=BIGINT},
      group_name = #{groupName,jdbcType=VARCHAR},
      name_id = #{nameId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=SMALLINT},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=BIGINT},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      reconcile_id = #{reconcileId,jdbcType=BIGINT},
      reconcile_code = #{reconcileCode,jdbcType=VARCHAR},
      is_receivable = #{isReceivable,jdbcType=SMALLINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=SMALLINT}
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
  <select id="selectByWaybillId" parameterType="java.util.Map" resultMap="BaseResultDtoMap">
    select <include refid="Base_Column_List"/>,
    (select sum(ff.money) from t_fee_flow ff where ff.account_id=account_id and ff.fee_property='运费') freight_total,
    (select sum(ff.money) from t_fee_flow ff where ff.account_id=account_id and ff.fee_property!='运费') other_fee_total,
    (select sum(ff.money) from t_fee_flow ff where ff.account_id=account_id) fee_total
    from t_fee_account
    where waybill_id = #{waybillId,jdbcType=BIGINT}
    and is_receivable = #{isReceivable,jdbcType=SMALLINT}
    order by account_id desc
  </select>
  <select id="selectFlowByWaybillId" parameterType="java.util.Map" resultMap="BaseResultDtoMap">
    select <include refid="Base_Column_List"/>
    from t_fee_account
    where waybill_id = #{waybillId,jdbcType=BIGINT}
    and is_receivable = #{isReceivable,jdbcType=SMALLINT}
    and is_deleted = 0
    order by account_id desc
  </select>
  <select id="selectFeeAccountDetail" parameterType="java.util.Map" resultMap="BaseResultDtoMap">
    select <include refid="Base_Column_List"/>
    from t_fee_account
    where waybill_id = #{waybillId,jdbcType=BIGINT}
    and is_receivable = #{isReceivable,jdbcType=SMALLINT}
    and is_deleted = 0
    order by account_id desc
  </select>
  <sql id="select_finance_condition">
    <if test="reconcileStatus!=null and reconcileStatus == 1">
      and fa.reconcile_id is null
    </if>
    <if test="reconcileStatus!=null and reconcileStatus == 2">
      and fa.reconcile_id is not null
    </if>
    <if test="groupId!=null and groupId != ''">
      and fa.group_id = #{groupId,jdbcType=BIGINT}
    </if>
    <if test="name!=null and name != ''">
      and fa.name like concat('%',#{name,jdbcType=VARCHAR},'%')
    </if>
    <if test="auditStatus!=null and auditStatus!=''">
      and fa.audit_status = #{auditStatus,jdbcType=SMALLINT}
    </if>
    <if test="auditBeginTime != null and auditBeginTime != ''">
      and fa.audit_date >= #{auditBeginTime,jdbcType=TIMESTAMP}
    </if>
    <if test="auditEndTime != null and auditEndTime != ''">
      and #{auditEndTime,jdbcType=TIMESTAMP} >= fa.audit_date
    </if>
    <if test="accountCode!=null and accountCode != ''">
      and fa.account_code = #{accountCode,jdbcType=VARCHAR}
    </if>
    <if test="waybillCode!=null and waybillCode != ''">
      and fa.waybill_code = #{waybillCode,jdbcType=VARCHAR}
    </if>
    <if test="reconcileCode!=null and reconcileCode != ''">
      and fa.reconcile_code = #{reconcileCode,jdbcType=VARCHAR}
    </if>
    <if test="createBeginTime != null and createBeginTime != ''">
      and fa.create_date >= #{createBeginTime,jdbcType=TIMESTAMP}
    </if>
    <if test="createEndTime != null and createEndTime != ''">
      and #{createEndTime,jdbcType=TIMESTAMP} >= fa.create_date
    </if>
  </sql>
  <select id="selectByCondition" parameterType="java.util.Map" resultMap="BaseResultDtoMap">
    select <include refid="Base_Column_List"/>,
    (select sum(ff.money) from t_fee_flow ff where ff.account_id=fa.account_id and ff.fee_property='运费' and ff.is_deleted=0) freight_total,
    (select sum(ff.money) from t_fee_flow ff where ff.account_id=fa.account_id and ff.fee_property!='运费' and ff.is_deleted=0) other_fee_total,
    (select sum(ff.money) from t_fee_flow ff where ff.account_id=fa.account_id and ff.is_deleted=0) fee_total
    from t_fee_account fa
    <where>
      fa.is_receivable = #{isReceivable,jdbcType=SMALLINT}
      and fa.company_id = #{companyId,jdbcType=BIGINT}
      and fa.is_deleted = #{isDeleted,jdbcType=SMALLINT}
      <include refid="select_finance_condition"/>
    </where>
    order by fa.account_id desc
  </select>
  <select id="selectByConditionFeeTotal" parameterType="java.util.Map" resultMap="BaseResultDtoMap">
    select
    sum(case when ff.fee_property='运费' then ff.money else 0 end) freight_total,
    sum(case when ff.fee_property!='运费' then ff.money else 0 end) other_fee_total,
    sum(ff.money) fee_total
    from t_fee_account fa,t_fee_flow ff
    <where>
      fa.account_id=ff.account_id
      and fa.is_receivable = #{isReceivable,jdbcType=SMALLINT}
      and fa.company_id = #{companyId,jdbcType=BIGINT}
      and fa.is_deleted = #{isDeleted,jdbcType=SMALLINT}
      and ff.is_deleted = #{isDeleted,jdbcType=SMALLINT}
      <include refid="select_finance_condition"/>
    </where>
  </select>
  <update id="auditByAccountIds" parameterType="java.util.Map">
    update t_fee_account
    set audit_status = #{auditStatus,jdbcType=SMALLINT},
      audit_date = #{auditDate,jdbcType=TIMESTAMP}
    where account_id in(
    <foreach separator=";" index="index" item="item" collection="accountIds" close="" open="">
      #{item}
    </foreach>
    )
  </update>
  <select id="reconcileByAccountIds" parameterType="java.util.Map" resultMap="BaseResultDtoMap">
    select count(a.waybill_id) waybillCount, a.name, sum(f.money)
    from t_fee_account a,t_fee_flow f
    where a.account_id=f.account_id and f.account_id in(
    <foreach separator=";" index="index" item="item" collection="accountIds" close="" open="">
      #{item}
    </foreach>
    )
    group by a.name
  </select>
  <insert id="insertBatch">
    insert into t_fee_account (account_code, company_id, waybill_id,
    waybill_code, group_id, group_name,
    name_id, name, audit_status,
    audit_date, operator_id, operator_name,
    reconcile_id, reconcile_code, is_receivable,
    create_date, is_deleted)
    <foreach item="item" collection="list" separator=",">
      values (#{item.accountCode,jdbcType=VARCHAR}, #{item.companyId,jdbcType=BIGINT}, #{item.waybillId,jdbcType=BIGINT},
      #{item.waybillCode,jdbcType=VARCHAR}, #{item.groupId,jdbcType=BIGINT}, #{item.groupName,jdbcType=VARCHAR},
      #{item.nameId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.auditStatus,jdbcType=SMALLINT},
      #{item.auditDate,jdbcType=TIMESTAMP}, #{item.operatorId,jdbcType=BIGINT}, #{item.operatorName,jdbcType=VARCHAR},
      #{item.reconcileId,jdbcType=BIGINT}, #{item.reconcileCode,jdbcType=VARCHAR}, #{item.isReceivable,jdbcType=SMALLINT},
      #{item.createDate,jdbcType=TIMESTAMP}, #{item.isDeleted,jdbcType=SMALLINT})
    </foreach>
  </insert>
  <update id="updateBatch" parameterType="java.util.List">
    <foreach separator=";" index="index" item="item" collection="list" close="" open="">
      update t_fee_account
      <set>
        <if test="item.accountCode != null">
          account_code = #{item.accountCode,jdbcType=VARCHAR},
        </if>
        <if test="item.companyId != null">
          company_id = #{item.companyId,jdbcType=BIGINT},
        </if>
        <if test="item.waybillId != null">
          waybill_id = #{item.waybillId,jdbcType=BIGINT},
        </if>
        <if test="item.waybillCode != null">
          waybill_code = #{item.waybillCode,jdbcType=VARCHAR},
        </if>
        <if test="item.groupId != null">
          group_id = #{item.groupId,jdbcType=BIGINT},
        </if>
        <if test="item.groupName != null">
          group_name = #{item.groupName,jdbcType=VARCHAR},
        </if>
        <if test="item.nameId != null">
          name_id = #{item.nameId,jdbcType=BIGINT},
        </if>
        <if test="item.name != null">
          name = #{item.name,jdbcType=VARCHAR},
        </if>
        <if test="item.auditStatus != null">
          audit_status = #{item.auditStatus,jdbcType=SMALLINT},
        </if>
        <if test="item.auditDate != null">
          audit_date = #{item.auditDate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.operatorId != null">
          operator_id = #{item.operatorId,jdbcType=BIGINT},
        </if>
        <if test="item.operatorName != null">
          operator_name = #{item.operatorName,jdbcType=VARCHAR},
        </if>
        <if test="item.reconcileId != null">
          reconcile_id = #{item.reconcileId,jdbcType=BIGINT},
        </if>
        <if test="item.reconcileCode != null">
          reconcile_code = #{item.reconcileCode,jdbcType=VARCHAR},
        </if>
        <if test="item.isReceivable != null">
          is_receivable = #{item.isReceivable,jdbcType=SMALLINT},
        </if>
        <if test="item.createDate != null">
          create_date = #{item.createDate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.isDeleted != null">
          is_deleted = #{item.isDeleted,jdbcType=SMALLINT},
        </if>
      </set>
      where account_id = #{item.accountId,jdbcType=BIGINT}
    </foreach>
  </update>
  
  <update id="updateReconcileByBatch">
    update t_fee_account
  	<foreach collection="list" index="index" item="item">
  	<set>
  	 reconcile_id = #{item.reconcileId,jdbcType=BIGINT},reconcile_code = #{item.reconcileCode,jdbcType=VARCHAR}
  	</set>
  	<where>
  	account_id = #{item.accountId,jdbcType=BIGINT}
  	</where>
  	</foreach>
  </update>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</mapper>